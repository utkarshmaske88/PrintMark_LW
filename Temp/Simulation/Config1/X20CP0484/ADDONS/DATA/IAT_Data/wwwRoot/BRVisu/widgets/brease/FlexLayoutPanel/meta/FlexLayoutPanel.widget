<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.FlexLayoutPanel">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
			<LicenseInfo>licensed</LicenseInfo>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>brease/core/ContainerWidget.js</File>
				<File>brease/enum/Enum.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/FlexLayoutPanel/FlexLayoutPanel.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Container</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Container Widget</Description>
			<Description name="de">Bereich in dem definierte Widgets für eine dynamische Größenanpassung platziert werden können</Description>
			<Description name="en">Area in which defined widgets can be placed for dynamic sizing</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.FlexLayoutPanel</Class>
			<Class level="1">brease.core.ContainerWidget</Class>
			<Class level="2">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
			<Child>widgets.brease.FlexLayoutPanel</Child>
			<Child>widgets.brease.Button</Child>
			<Child>widgets.brease.TextOutput</Child>
			<Child>widgets.brease.Label</Child>
			<Child>widgets.brease.Image</Child>
			<Child>widgets.brease.LoginInfo</Child>
			<Child>widgets.brease.DateTimeOutput</Child>
			<Child>widgets.brease.NumericOutput</Child>
			<Child>widgets.brease.NumericInput</Child>
			<Child>widgets.brease.ProgressBar</Child>
			<Child>widgets.brease.TextInput</Child>
			<Child>widgets.brease.DateTimeInput</Child>
			<Child>widgets.brease.Login</Child>
			<Child>widgets.brease.DropDownBox</Child>
			<Child>widgets.brease.ListBox</Child>
			<Child>widgets.brease.Ellipse</Child>
			<Child>widgets.brease.Rectangle</Child>
			<Child>widgets.brease.RadioButtonGroup</Child>
			<Child>widgets.brease.ButtonBar</Child>
			<Child>widgets.brease.NavigationBar</Child>
			<Child>widgets.brease.Navigation</Child>
			<Child>widgets.brease.QRViewer</Child>
			<Child>widgets.brease.BasicSlider</Child>
			<Child>widgets.brease.LinearGauge</Child>
			<Child>widgets.brease.RangeSlider</Child>
			<Child>widgets.brease.PieChart</Child>
			<Child>widgets.brease.RadialGauge</Child>
			<Child>widgets.brease.AlarmList</Child>
			<Child>widgets.brease.AlarmHistory</Child>
			<Child>widgets.brease.AuditList</Child>
			<Child>widgets.brease.UserList</Child>
			<Child>widgets.brease.AlarmLine</Child>
			<Child>widgets.brease.Timeline</Child>
			<Child>widgets.brease.XYJoystick</Child>
			<Child>widgets.brease.Joystick</Child>
			<Child>widgets.brease.ImageList</Child>
			<Child>widgets.brease.TextPicker</Child>
			<Child>widgets.brease.TextPad</Child>
			<Child>widgets.brease.Paper</Child>
			<Child>widgets.brease.XYChart</Child>
			<Child>widgets.brease.OnlineChartHDA</Child>
			<Child>widgets.brease.BarChart</Child>
			<Child>widgets.brease.StackedBarChart</Child>
			<Child>widgets.brease.VideoPlayer</Child>
			<Child>widgets.brease.PDFViewer</Child>
			<Child>widgets.brease.VncViewer</Child>
			<Child>widgets.brease.MotionPad</Child>
			<Child>widgets.brease.WebViewer</Child>
		</Children>
		<Methods>
			<Method name="Focus" read="false">
				<Description>Sets focus on the widget element, if it can be focused and keyboardOperation=true</Description>
			</Method>
			<Method name="SetEnable" read="false">
				<Description>Sets the state of property «enable»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetStyle" read="false">
				<Arguments>
					<Argument name="value" type="StyleReference" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetVisible" read="false">
				<Description>Sets the state of property «visible»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="1" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="2" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="DisabledClick">
				<Description>Fired when disabled element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="hasPermission" type="Boolean" index="1" required="true">
						<Description>defines if the state is caused due to missing roles of the current user</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="2" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="3" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Description>Fired when operability of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>operability</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="FocusIn">
				<Description>Fired when the widgets gets focus</Description>
			</Event>
			<Event name="FocusOut">
				<Description>Fired when the widgets lost focus</Description>
			</Event>
			<Event name="VisibleChanged">
				<Description>Fired when the visibility of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>visibility</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type</Description>
			</Property>
			<Property name="tabIndex" type="Integer" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="-1">
				<Description>sets if a widget should have autofocus enabled (0), the order of the focus (&gt;0),
or if autofocus should be disabled (-1)				</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility</Description>
			</Property>
		</Properties>
		<StyleProperties>
			<StyleProperty name="width" type="AutoSize" not_styleable="true" owner="widgets.brease.FlexLayoutPanel" category="Layout" groupRefId="Size" groupOrder="1" default="200">
				<StyleElement attribute="@include elemAutoWidth($value)"/>
				<Description>outer width of widget</Description>
			</StyleProperty>
			<StyleProperty name="height" type="AutoSize" not_styleable="true" owner="widgets.brease.FlexLayoutPanel" category="Layout" groupRefId="Size" groupOrder="2" default="150">
				<StyleElement attribute="@include elemAutoHeight($value)"/>
				<Description>outer height of widget</Description>
			</StyleProperty>
			<StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
				<StyleElement attribute="@include elemTop($value)"/>
				<Description>absolute position measured from top boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
				<StyleElement attribute="@include elemLeft($value)"/>
				<Description>absolute position measured from left boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
				<StyleElement attribute="z-index"/>
				<Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;
        The zIndex must be unique within a content.&lt;br/&gt;				</Description>
			</StyleProperty>
			<StyleProperty name="minWidth" type="Size" not_styleable="true" default="0" groupRefId="Size" groupOrder="3">
				<StyleElement attribute="@include elemMinWidth($value)"/>
				<Description>minimum outer width of widget</Description>
			</StyleProperty>
			<StyleProperty name="maxWidth" type="Size" not_styleable="true" default="0" groupRefId="Size" groupOrder="4">
				<StyleElement attribute="@include elemMaxWidth($value)"/>
				<Description>maximum outer width of widget</Description>
			</StyleProperty>
			<StyleProperty name="minHeight" type="Size" not_styleable="true" default="0" groupRefId="Size" groupOrder="5">
				<StyleElement attribute="@include elemMinHeight($value)"/>
				<Description>minimum outer height of widget</Description>
			</StyleProperty>
			<StyleProperty name="maxHeight" type="Size" not_styleable="true" default="0" groupRefId="Size" groupOrder="6">
				<StyleElement attribute="@include elemMaxHeight($value)"/>
				<Description>maximum outer height of widget</Description>
			</StyleProperty>
			<StyleProperty name="alignment" category="Appearance" type="brease.enum.Direction" default="horizontal">
				<StyleElement selector="&gt;.container" attribute="@include flexDirection($value)"/>
				<Description>direction of child widgets</Description>
			</StyleProperty>
			<StyleProperty name="childMainAlign" category="Appearance" type="brease.enum.MainAlign" default="start">
				<StyleElement selector="&gt;.container" attribute="@include justify-content($value)"/>
				<Description>alignment of child widgets along the main direction defined by the alignment</Description>
			</StyleProperty>
			<StyleProperty name="childCrossAlign" category="Appearance" type="brease.enum.CrossAlign" default="start">
				<StyleElement selector="&gt;.container" attribute="@include align-items($value)"/>
				<Description>alignment of child widgets along the cross direction defined by the alignment</Description>
			</StyleProperty>
			<StyleProperty name="margin" category="Layout" type="Margin" default="10px">
				<StyleElement attribute="margin"/>
				<Description>Margin of the Widget</Description>
			</StyleProperty>
			<StyleProperty name="padding" category="Layout" type="Padding" default="10px">
				<StyleElement selector="&gt;.container" attribute="padding"/>
				<Description>Margin of the Widget</Description>
			</StyleProperty>
		</StyleProperties>
		<PropertyGroups>
			<PropertyGroup name="Size" type="String" category="Layout">
				<Description>outer height and width of widget</Description>
			</PropertyGroup>
			<PropertyGroup name="Position" type="String" category="Layout">
				<Description>top and left of widget</Description>
			</PropertyGroup>
		</PropertyGroups>
	<BindingTemplates>
  
</BindingTemplates>
</Widget>
</WidgetLibrary>