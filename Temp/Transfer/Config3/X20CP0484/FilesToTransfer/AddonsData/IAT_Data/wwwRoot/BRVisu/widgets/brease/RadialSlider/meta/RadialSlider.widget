<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.RadialSlider">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
			<LicenseInfo>licensed</LicenseInfo>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>brease/core/BaseWidget.js</File>
				<File>brease/events/BreaseEvent.js</File>
				<File>widgets/brease/RadialSlider/libs/Renderer.js</File>
				<File>brease/datatype/Node.js</File>
				<File>brease/decorators/MeasurementSystemDependency.js</File>
				<File>brease/core/Utils.js</File>
				<File>brease/config/NumberFormat.js</File>
				<File>brease/core/Types.js</File>
				<File>widgets/brease/common/libs/wfUtils/UtilsEditableBinding.js</File>
				<File>brease/decorators/DragAndDropCapability.js</File>
				<File>widgets/brease/common/DragDropProperties/libs/DroppablePropertiesEvents.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/RadialSlider/RadialSlider.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Numeric</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Schieberegler auf Basis eines Radius</Description>
			<Description name="de">Ermöglicht dem Benutzer einen numerischen Wert mit einem Schiebeschalter auf Basis eines Radius zu verändern</Description>
			<Description name="en">Enables the user to change a numeric value by a slider based on a radius</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.RadialSlider</Class>
			<Class level="1">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="Focus" read="false">
				<Description>Sets focus on the widget element, if it can be focused and keyboardOperation=true</Description>
			</Method>
			<Method name="GetValue" read="true">
				<Description>Returns value.</Description>
				<Result type="Number"/>
			</Method>
			<Method name="SetEnable" read="false">
				<Description>Sets the state of property «enable»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetStyle" read="false">
				<Description>Sets a predefined style for the widget</Description>
				<Arguments>
					<Argument name="value" type="StyleReference" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetValue" read="false">
				<Description>Sets value</Description>
				<Arguments>
					<Argument name="value" type="Number" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetVisible" read="false">
				<Description>Sets the state of property «visible»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="ShowTooltip" read="false"/>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="1" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="2" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="DisabledClick">
				<Description>Fired when disabled element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="hasPermission" type="Boolean" index="1" required="true">
						<Description>defines if the state is caused due to missing roles of the current user</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="2" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="3" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Description>Fired when operability of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>operability</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="FocusIn">
				<Description>Fired when the widgets gets focus</Description>
			</Event>
			<Event name="FocusOut">
				<Description>Fired when the widgets lost focus</Description>
			</Event>
			<Event name="MouseDown">
				<Description>Fired when widget enters mouseDown state</Description>
				<Arguments>
					<Argument name="horizontalPos" type="String" index="0" required="true">
						<Description>horizontal position of mouse in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="1" required="true">
						<Description>vertical position of mouse in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="MouseUp">
				<Description>Fired when widget enters mouseUp state</Description>
				<Arguments>
					<Argument name="horizontalPos" type="String" index="0" required="true">
						<Description>horizontal position of mouse in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="1" required="true">
						<Description>vertical position of mouse in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDragEnter">
				<Description>Fired when element has onDragEnter.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been entering the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been entering the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDragLeave">
				<Description>Fired when element has OnDragLeave.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been leaving the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been leaving the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDrop">
				<Description>Fired when element has OnDrop.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been dropped on the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been dropped on the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="ValueChanged">
				<Description>Fired when index changes.</Description>
				<Arguments>
					<Argument name="value" type="Number" index="0" required="true"/>
				</Arguments>
			</Event>
			<Event name="VisibleChanged">
				<Description>Fired when the visibility of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>visibility</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="changeOnMove" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Specifies if the new Value should be send to the server immediatly the slider thumb is moved.</Description>
			</Property>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.</Description>
			</Property>
			<Property name="format" type="brease.config.MeasurementSystemFormat" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="{ &apos;metric&apos;: { &apos;decimalPlaces&apos;: 1, &apos;minimumIntegerDigits&apos;: 1 }, &apos;imperial&apos;: { &apos;decimalPlaces&apos;: 1, &apos;minimumIntegerDigits&apos;: 1 }, &apos;imperial-us&apos;: { &apos;decimalPlaces&apos;: 1, &apos;minimumIntegerDigits&apos;: 1 } }">
				<Description>Defines the format of the Data for each measurement system.</Description>
			</Property>
			<Property name="maxValue" type="Number" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="100">
				<Description>defines the maximum Value for the value-property.</Description>
			</Property>
			<Property name="minValue" type="Number" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="0">
				<Description>defines the minimum Value for the value-property.</Description>
			</Property>
			<Property name="node" type="brease.datatype.Node" initOnly="false" localizable="false" editableBinding="true" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Value with Unit to display on the Slider.</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles</Description>
			</Property>
			<Property name="radius" type="PixelVal" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="100px">
				<Description>Defines the radius of the Track.</Description>
			</Property>
			<Property name="range" type="UNumber" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="270">
				<Description>Defines the range from the StartPoint to the EndPoint.</Description>
			</Property>
			<Property name="showUnit" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>Specifies wheater the unit of the displayed Value should be shown.</Description>
			</Property>
			<Property name="showValueDisplay" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Specifies if the Actual Value should be shown in the Center of the Widget.</Description>
			</Property>
			<Property name="startAngle" type="UNumber" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="225">
				<Description>Defines the startAngle.</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type</Description>
			</Property>
			<Property name="tabIndex" type="Integer" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="-1">
				<Description>sets if a widget should have autofocus enabled (0), the order of the focus (&gt;0),
or if autofocus should be disabled (-1)				</Description>
			</Property>
			<Property name="thumbSize" type="PixelVal" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="50px">
				<Description>Defines the diameter of the Thumb.</Description>
			</Property>
			<Property name="tooltip" type="String" initOnly="true" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>reference to a tooltip for a widget</Description>
			</Property>
			<Property name="trackSize" type="PixelVal" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="7px">
				<Description>Defines the width of the track in which the Thumb is placed.</Description>
			</Property>
			<Property name="unit" type="brease.config.MeasurementSystemUnit" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>Unit code depending on measurement system.</Description>
			</Property>
			<Property name="value" type="Number" initOnly="false" localizable="false" editableBinding="true" readOnly="false" required="false" projectable="true" nodeRefId="node" category="Data" defaultValue="50">
				<Description>actual Value of the PC.</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility</Description>
			</Property>
		</Properties>
		<StyleProperties>
			<StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.brease.RadialSlider" category="Layout" groupRefId="Size" groupOrder="1" default="250">
				<StyleElement attribute="@include elemWidth($value)"/>
				<Description>outer width of widget</Description>
			</StyleProperty>
			<StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.brease.RadialSlider" category="Layout" groupRefId="Size" groupOrder="2" default="250">
				<StyleElement attribute="@include elemHeight($value)"/>
				<Description>outer height of widget</Description>
			</StyleProperty>
			<StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
				<StyleElement attribute="@include elemTop($value)"/>
				<Description>absolute position measured from top boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
				<StyleElement attribute="@include elemLeft($value)"/>
				<Description>absolute position measured from left boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
				<StyleElement attribute="z-index"/>
				<Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;
        The zIndex must be unique within a content.&lt;br/&gt;				</Description>
			</StyleProperty>
			<StyleProperty name="borderWidth" category="Appearance" type="PixelValCollection" default="2px">
				<StyleElement selector="&amp;:not(.disabled)" attribute="border-width"/>
				<Description>border width of the widget</Description>
			</StyleProperty>
			<StyleProperty name="borderColor" category="Appearance" type="ColorCollection" default="#000000">
				<StyleElement selector="&amp;:not(.disabled)" attribute="border-color"/>
				<Description>border color of the widget</Description>
			</StyleProperty>
			<StyleProperty name="borderStyle" type="BorderStyle" category="Appearance" default="solid">
				<StyleElement attribute="border-style"/>
				<Description>Sets the border style</Description>
			</StyleProperty>
			<StyleProperty name="backColor" category="Appearance" type="Color" default="transparent">
				<StyleElement selector="&amp;:not(.disabled)" attribute="background-color"/>
				<Description>background color of the widget</Description>
			</StyleProperty>
			<StyleProperty name="textColor" category="Appearance" type="Color" default="#000000">
				<StyleElement selector="text" attribute="fill"/>
				<Description>Sets the Color of the displayed value</Description>
			</StyleProperty>
			<StyleProperty name="fontSize" category="Font" type="PixelVal" default="35px">
				<StyleElement selector="text" attribute="font-size"/>
				<Description>Sets the fontSize of the displayed value</Description>
			</StyleProperty>
			<StyleProperty name="fontName" category="Font" type="FontName" default="Arial">
				<StyleElement selector="text" attribute="font-family"/>
				<Description>Sets the font name of the displayed value</Description>
			</StyleProperty>
			<StyleProperty name="bold" category="Font" type="Boolean" default="false">
				<StyleElement selector="text" attribute="@include font-weight-bold($value)"/>
				<Description>Sets the bold property of the displayed value</Description>
			</StyleProperty>
			<StyleProperty name="italic" category="Font" type="Boolean" default="false">
				<StyleElement selector="text" attribute="@include font-style-italic($value)"/>
				<Description>Sets the italic property of the displayed value</Description>
			</StyleProperty>
			<StyleProperty name="opacity" category="Appearance" type="Opacity" default="1">
				<StyleElement attribute="opacity"/>
				<Description>opacity of the widget</Description>
			</StyleProperty>
			<StyleProperty name="thumbColor" category="Appearance" type="Color" default="#FF8800">
				<StyleElement selector=".RadialSliderGroup .thumb .sliderThumb:not(.disabled)" attribute="fill"/>
				<Description>background color of the slider thumb</Description>
			</StyleProperty>
			<StyleProperty name="trackColor" category="Appearance" type="Color" default="#C8C8C8">
				<StyleElement selector=".RadialSliderGroup .arc .arcPath:not(.disabled)" attribute="fill"/>
				<Description>background color of the slider line</Description>
			</StyleProperty>
			<StyleProperty name="fillColor" category="Appearance" type="Color" default="transparent">
				<StyleElement selector=".RadialSliderGroup .arcFill .arcFillPath:not(.disabled)" attribute="fill"/>
				<Description>background color of the slider line</Description>
			</StyleProperty>
			<StyleProperty name="disabledBorderWidth" category="Appearance" type="PixelValCollection" default="2px">
				<StyleElement selector="&amp;.disabled" attribute="border-width"/>
				<Description>Sets the border width of the widget when disbaled.</Description>
			</StyleProperty>
			<StyleProperty name="disabledBorderColor" category="Appearance" type="ColorCollection" default="#C8C8C8">
				<StyleElement selector="&amp;.disabled" attribute="border-color"/>
				<Description>border color of the widget</Description>
			</StyleProperty>
			<StyleProperty name="disabledThumbColor" category="Appearance" type="Color" default="#F1F1F1">
				<StyleElement selector=".RadialSliderGroup .thumb .sliderThumb.disabled" attribute="fill"/>
				<Description>Sets the color of the thumbColor when the widget is disabled</Description>
			</StyleProperty>
			<StyleProperty name="disabledTrackColor" category="Appearance" type="Color" default="#EAEAEA">
				<StyleElement selector=".RadialSliderGroup .arc .arcPath.disabled" attribute="fill"/>
				<Description>Sets the color of the trackColor when the widget is disabled</Description>
			</StyleProperty>
			<StyleProperty name="disabledFillColor" category="Appearance" type="Color" default="#C8C8C8">
				<StyleElement selector=".RadialSliderGroup .arcFill .arcFillPath.disabled" attribute="fill"/>
				<Description>Sets the color of the trackColor when the widget is disabled</Description>
			</StyleProperty>
			<StyleProperty name="disabledBackColor" category="Appearance" type="Color" default="transparent">
				<StyleElement selector="&amp;.disabled" attribute="background-color"/>
				<Description>Sets the background color of the widget when disabled</Description>
			</StyleProperty>
		</StyleProperties>
		<PropertyGroups>
			<PropertyGroup name="Size" type="String" category="Layout">
				<Description>outer height and width of widget</Description>
			</PropertyGroup>
			<PropertyGroup name="Position" type="String" category="Layout">
				<Description>top and left of widget</Description>
			</PropertyGroup>
		</PropertyGroups>
	<BindingTemplates>
  
</BindingTemplates>
</Widget>
</WidgetLibrary>